name: Create Release

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        target:
          - name: ubuntu20.04
            image: ubuntu:20.04
          - name: ubuntu22.04
            image: ubuntu:22.04
          # - name: ubuntu24.04
          #   image: ubuntu:24.04
          # - name: fedora39
          #   image: fedora:39
          # - name: archlinux
          #   image: archlinux:base-devel
        host:
          - runner: ubuntu-24.04
            arch: x86_64
            suffix: ""
          - runner: ubuntu-24.04-arm
            arch: aarch64
            suffix: -aarch64
        exclude:
          # No Docker image for archlinux on linux/arm64, as Arch doesn't officially support ARM.
          - target:
              name: archlinux
            host:
              suffix: -aarch64

    runs-on: ${{ matrix.host.runner }}
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - name: Build Release
      id: build_release
      run: |
        # DARWIN_BUILD_BASE=${{ matrix.target.image }} docker compose run --build --rm builder -c ./prepare-toolchain
        mkdir -p packages && echo "dummy" > packages/darwin-tools.tar.gz
    - name: Upload artifact
      id: upload_artifact
      uses: actions/upload-artifact@v4
      with:
        name: darwin-tools-${{ matrix.target.name }}${{ matrix.host.suffix }}.tar.gz
        path: packages/darwin-tools.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Download artifact
        id: download_artifact
        uses: actions/download-artifact@v4
        with:
          pattern: darwin-tools-*
          path: packages

      - name: Create and publish release
        id: publish_release
        run: |
          TAG="${GITHUB_REF##*/}-${GITHUB_SHA:0:7}"
          gh release create "$TAG" --draft --title "Draft Release"
          gh release list
          ls packages/*.tar.gz
          gh release upload "$TAG" packages/*.tar.gz
